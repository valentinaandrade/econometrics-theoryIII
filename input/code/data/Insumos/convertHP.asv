%% PREGUNTA 2. Detrending: Hodrick-Prescott filtering (HP)

%% Importe las series de Australia

clc; clear; close all;

% Configuramos las opciones de importación de los datos
opts = spreadsheetImportOptions("NumVariables", 14);

% Se define la hoja del archivo y rango
opts.Sheet = "filter";
opts.DataRange = "A2:N179";

% Definimos el nombre de las columnas y el formato de los datos
opts.VariableNames = ["date", "ln_pib", "ln_c", "ln_tdi", "tpm", "tpm2", "dfl", "inf", "dfl2", "inf2", "fedfund", "m1", "m3", "tcr"];
opts.VariableTypes = ["datetime", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Se definen las propiedades de las variables
opts = setvaropts(opts, "date", "InputFormat", "");

% Importamos datos
data = readtable("data.xlsx", opts, "UseExcel", false);

% Limpiamos el espacio de trabajo
clear opts
save cp data; % Guardo la estructura de datos para utilizarla más adelante

%% (b) Cree la función HP que cumpla con las siguientes características:
%       Input:  (1) serie que desea descomponer y (2) el parámetro de sensibilidad. 
%       Output: (1) tendencia y (2) el ciclo de la serie.

clc; clear; close all;

load cp; % Abro la estructura creada en el item (a) anterior
date = data.date;
ln_pib = data.ln_pib;
ln_c = data.ln_c;
ln_tdi = data.ln_tdi;
tpm = data.tpm;
tpm2 = data.tpm2;
dfl = data.dfl;
inf = data.inf;
dfl2 = data.dfl2;
inf2 = data.inf2;
fedfund = data.fedfund;
m1 = data.m1;
m3 = data.m3;
tcr = data.tcr;

% Se crea la función HP solicitada y la probamos para las series, se
% ocupa el factor de suavizamiento (smoothing) de 1600, esto se sugiere para 
% datos en frecuencia trimestral

[ln_pib_t,ln_pib_c] = HP(ln_pib,1600);
[ln_c_t,ln_c_c] = HP(ln_c,1600);
[ln_tdi_t,ln_tdi_c] = HP(ln_tdi,1600);
[tpm_t,tpm_c] = HP(tpm,1600);
[tpm2_t,tpm2_c] = HP(tpm2,1600);
[dfl_t,dfl_c] = HP(dfl,1600);
[inf_t,inf_c] = HP(inf,1600);
[dfl2_t,dfl2_c] = HP(dfl2,1600);
[inf2_t,inf2_c] = HP(inf2,1600);
[fedfund_t,fedfund_c] = HP(fedfund,1600);
[m1_t,m1_c] = HP(m1,1600);
[m3_t,m3_c] = HP(m3,1600);
[tcr_t,tcr_c] = HP(tcr,1600);

TEND = [ln_pib_t, ln_c_t, ln_tdi_t, tpm_t, tpm2_t, dfl_t, inf_t, dfl2_t, inf2_t, fedfund_t, m1_t, m3_t, tcr_t];
CYCLE = [ln_pib_c, ln_c_c, ln_tdi_c, tpm_c, tpm2_c, dfl_c, inf_c, dfl2_c, inf2_c, fedfund_c, m1_c, m3_c, tcr_c];

xlswrite('data.xlsx',TEND,'filter','O2');
xlswrite('data.xlsx',CYCLE,'filter','AB2')

%% Importe las series de Australia

clc; clear; close all;

% Configuramos las opciones de importación de los datos
opts = spreadsheetImportOptions("NumVariables", 15);

% Se define la hoja del archivo y rango
opts.Sheet = "filter2";
opts.DataRange = "A2:O149";

% Definimos el nombre de las columnas y el formato de los datos
opts.VariableNames = ["date", "ln_pib", "ln_c", "ln_tdi", "tpm", "tpm2", "dfl", "inf", "dfl2", "inf2", "fedfund", "m1", "m3", "tcr", "ln_g"];
opts.VariableTypes = ["datetime", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Se definen las propiedades de las variables
opts = setvaropts(opts, "date", "InputFormat", "");

% Importamos datos
data = readtable("data.xlsx", opts, "UseExcel", false);

% Limpiamos el espacio de trabajo
clear opts
save cp data; % Guardo la estructura de datos para utilizarla más adelante

%% (b) Cree la función HP que cumpla con las siguientes características:
%       Input:  (1) serie que desea descomponer y (2) el parámetro de sensibilidad. 
%       Output: (1) tendencia y (2) el ciclo de la serie.

clc; clear; close all;

load cp; % Abro la estructura creada en el item (a) anterior
date = data.date;
ln_pib = data.ln_pib;
ln_c = data.ln_c;
ln_tdi = data.ln_tdi;
tpm = data.tpm;
tpm2 = data.tpm2;
dfl = data.dfl;
inf = data.inf;
dfl2 = data.dfl2;
inf2 = data.inf2;
fedfund = data.fedfund;
m1 = data.m1;
m3 = data.m3;
tcr = data.tcr;
ln_g = data.tcr;


% Se crea la función HP solicitada y la probamos para las series, se
% ocupa el factor de suavizamiento (smoothing) de 1600, esto se sugiere para 
% datos en frecuencia trimestral

[ln_pib_t,ln_pib_c] = HP(ln_pib,1600);
[ln_c_t,ln_c_c] = HP(ln_c,1600);
[ln_tdi_t,ln_tdi_c] = HP(ln_tdi,1600);
[tpm_t,tpm_c] = HP(tpm,1600);
[tpm2_t,tpm2_c] = HP(tpm2,1600);
[dfl_t,dfl_c] = HP(dfl,1600);
[inf_t,inf_c] = HP(inf,1600);
[dfl2_t,dfl2_c] = HP(dfl2,1600);
[inf2_t,inf2_c] = HP(inf2,1600);
[fedfund_t,fedfund_c] = HP(fedfund,1600);
[m1_t,m1_c] = HP(m1,1600);
[m3_t,m3_c] = HP(m3,1600);
[tcr_t,tcr_c] = HP(tcr,1600);

TEND = [ln_pib_t, ln_c_t, ln_tdi_t, tpm_t, tpm2_t, dfl_t, inf_t, dfl2_t, inf2_t, fedfund_t, m1_t, m3_t, tcr_t];
CYCLE = [ln_pib_c, ln_c_c, ln_tdi_c, tpm_c, tpm2_c, dfl_c, inf_c, dfl2_c, inf2_c, fedfund_c, m1_c, m3_c, tcr_c];

xlswrite('data.xlsx',TEND,'filter','O2');
xlswrite('data.xlsx',CYCLE,'filter','AB2')


%%

[ipc_t,ipc_c]   = HP(ipc,14400)
[pcu_t,pcu_c]   = HP(pcu,14400)
[poil_t,poil_c] = HP(poil,14400)

figure(1)
plot(date,pcu, '-red')
hold on
plot(date, pcu_t, '-blue')
title(['Filtro Hodrick-Prescott Precio del Cobre']);
xlabel('Meses');
ylabel('Serie y Tendencia Filtro HP');
grid on
legend ('Precio del Cobre', 'Tendecia Precio del Cobre',"Location","southeast")
hold off
saveas(gcf,'preg2_b.png')

%% (c) Grafique la serie original del precio de cobre junto a las tendencias 
%  obtenidas para un vector de sensibilidad . Interprete brevemente. 

clc; clear; close all;

load cp; % Abro la estructura creada en el item (a) anterior
date = data.date;
ipc  = data.ipc;
pcu  = data.pcu;
poil = data.poil;

% Defino el vector lambda con los parámetros de suavizamiento

lambda = [6.25 1600 129000];

[pcu_t1,pcu_c1]   = HP(pcu,lambda(1,1))
[pcu_t2,pcu_c2]   = HP(pcu,lambda(1,2))
[pcu_t3,pcu_c3]   = HP(pcu,lambda(1,3))

figure(2)
plot(date,pcu, '-black')
hold on
plot(date, pcu_t1, '--red')
hold on
plot(date, pcu_t2, '--blue')
hold on
plot(date, pcu_t3, '--magenta')
title(['Filtro Hodrick-Prescott Precio del Cobre']);
xlabel('Meses');
ylabel('Serie y Tendencias Filtro HP');
grid on
legend ('Precio del Cobre', 'lambda=6.25', 'lambda=1600', 'lambda=129000',"Location","southeast")
hold off
saveas(gcf,'preg2_c.png')

%% (d) Estime una regresión lineal mediante OLS de los siguientes modelos:
%       M1: pi = b0 + b1*pi(-1) + b2*pcu + b3*pcu(-1) + e
%       M2: pi = b0 + b1*pi(-1) + b2*poil + b3*poil(-1) + e
% Desarrolle el proceso de forma algebraica para la obtención de los estimadores, 
% es decir, no utilice comandos econométricos en Matlab. Entregue una 
% interpretación económica de los modelos.

clc; clear; close all;

load cp; % Abro la estructura creada en el item (a) anterior
date = data.date;
ipc  = data.ipc;
pcu  = data.pcu;
poil = data.poil;

% Expresamos las variables pcu y poil en log para simplificar la interpretación  
% de los moodelos como cambios porcentuales, de igual forma la inflación, se     
% expresa como brecha entre la inflación anual respecto a su prom. histórico
lnipc  = log(ipc);
piyoy  = (ipc(13:end)./ipc(1:end-12)-1)*100; % inflación interanual
pitend = ones(size(piyoy))*mean(piyoy); % tendencia inf anual: prom. cercano a 3%
pi     = (piyoy - pitend); % brecha de inflación anual respecto a su prom histórico
lnpcu  = log(pcu);
lnpoil = log(poil);
date2  = date(13:end);

% Aplico filtro hp al log de las series pcu y poil utilizando como parámetro de 
% suavizamiento 14400, esto es lo sugerido para datos en frecuencia mensual
[pcu_t,pcu_c]   = HP(lnpcu,14400)
[poil_t,poil_c] = HP(lnpoil,14400)

% Definimos el ciclo del pcu y poil cómo % de su tendencia
pcu_cpp = pcu_c*100;
poil_cpp = poil_c*100;

% Rezagos un período las variables pi, pcu y poil
lag_pi   = pi(1:end-1);
lag_pcu  = pcu_cpp(1:end-1);
lag_poil = poil_cpp(1:end-1);

% Creamos la variable independiente y las matrices M1 y M2 con sus
% respectivas variables de control:
Y  = pi(2:end);
M1 = [ones(size(lag_pi)), lag_pi, pcu_cpp(14:end), lag_pcu(13:end)];
M2 = [ones(size(lag_pi)), lag_pi, poil_cpp(14:end), lag_poil(13:end)];

% Corremos la regresión lineal OLS:
BETAS1 = inv(M1'*M1)*(M1'*Y);
BETAS2 = inv(M2'*M2)*(M2'*Y);

% Análisis gráfico del ciclo de las variables de interes de los modelos
figure(3)
plot(date2, pi, '-black')
hold on
plot(date2, pcu_cpp(13:end), '-red')
hold on
plot(date2, poil_cpp(13:end), '-blue')
title(['Ciclo de las Series según Filtro HP']);
xlabel('Meses');
ylabel('Ciclo según Filtro HP');
grid on
legend ('ipc', 'pcu', 'poil',"Location","southeast")
hold off
saveas(gcf,'preg2_d.png')

% Tabla con los coeficientes del modelo
Datos = ["beta0"; "beta1"; "beta2"; "beta3"];
Model1    = [round(BETAS1(1,1),3); round(BETAS1(2,1),3); round(BETAS1(3,1),3); round(BETAS1(4,1),3)];
Model2    = [round(BETAS2(1,1),3); round(BETAS2(2,1),3); round(BETAS2(3,1),3); round(BETAS2(4,1),3)];
Stat = table(Datos,Model1,Model2);
Stat
